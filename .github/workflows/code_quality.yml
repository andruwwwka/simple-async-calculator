name: Code quality
on: [pull_request]
jobs:
  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry
      - run: make install-deps deps=pylint,test
      - run: make pylint
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry
      - run: make install-deps deps=mypy,test
      - run: make mypy
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install poetry
      - run: make install-deps deps=test
      - name: Collect coverage
        id: coverage
        run: |
          make test
          cov_fail=`cat ./pytest-coverage.txt | grep 'is less than fail-under'` || echo ''
          echo "cov_fail=$cov_fail" >> $GITHUB_OUTPUT
          test_fails=`cat ./pytest.xml | grep '</failure>'` || echo ''
          echo "test_fails=$test_fails" >> $GITHUB_OUTPUT
          test_errors=`cat ./pytest.xml | grep '</error>'` || echo ''
          echo "test_errors=$test_errors" >> $GITHUB_OUTPUT
      - if: |
          steps.coverage.outputs.cov_fail || steps.coverage.outputs.test_fails || steps.coverage.outputs.test_errors
        run: exit 1
      - name: Coverage comment
        if: failure()
        uses: MishaKav/pytest-coverage-comment@main
        with:
          junitxml-path: ./pytest.xml
          create-new-comment: true
      - uses: ntsd/auto-request-changes-action@v2
        if: failure()
        with:
          comment-body: Auto checks failed
      - uses: hmarr/auto-approve-action@v3
        if: success()
        with:
          review-message: Auto checks succeed
  formatter:
    needs:
      - mypy
      - pylint
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: pip install isort
      - run: pip install black
      - run: make formatter
      - id: git-diff
        run: |
          diff_list=`git diff --name-only`
          echo "diff=$diff_list" >> $GITHUB_OUTPUT
      - if: steps.git-diff.outputs.diff
        run: |
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'          
          git commit -am "[GitHub Actions] Format Python code with psf/black and PyCQA/isort"
          git push

